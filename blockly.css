/*******************************
         Site Settings
*******************************/
/*-------------------
       Fonts
--------------------*/
/*-------------------
      Base Sizes
--------------------*/
/* This is the single variable that controls them all */
/* The size of page text  */
/*-------------------
    Border Radius
--------------------*/
/* See Power-user section below
   for explanation of @px variables
*/
/*-------------------
    Brand Colors
--------------------*/
/*--------------
  Page Heading
---------------*/
/*--------------
   Form Input
---------------*/
/* This adjusts the default form input across all elements */
/* Input Text Color */
/* Line Height Default For Inputs in Browser (Descendors are 17px at 14px base em) */
/*-------------------
    Focused Input
--------------------*/
/* Used on inputs, textarea etc */
/* Used on dropdowns, other larger blocks */
/*-------------------
        Sizes
--------------------*/
/*
  Sizes are all expressed in terms of 14px/em (default em)
  This ensures these "ratios" remain constant despite changes in EM
*/
/*-------------------
        Page
--------------------*/
/*-------------------
      Paragraph
--------------------*/
/*-------------------
       Links
--------------------*/
/*-------------------
    Scroll Bars
--------------------*/
/* Inverted */
/*-------------------
  Highlighted Text
--------------------*/
/*-------------------
       Loader
--------------------*/
/*-------------------
        Grid
--------------------*/
/*-------------------
     Transitions
--------------------*/
/*-------------------
     Breakpoints
--------------------*/
/*-------------------
      Site Colors
--------------------*/
/*---  Colors  ---*/
/*---  Light Colors  ---*/
/*---   Neutrals  ---*/
/*--- Colored Backgrounds ---*/
/*--- Colored Headers ---*/
/*--- Colored Text ---*/
/*--- Colored Border ---*/
/*-------------------
     Alpha Colors
--------------------*/
/*-------------------
       Accents
--------------------*/
/* Differentiating Neutrals */
/* Differentiating Layers */
/*******************************
           Power-User
*******************************/
/*-------------------
    Emotive Colors
--------------------*/
/* Positive */
/* Negative */
/* Info */
/* Warning */
/*-------------------
        Paths
--------------------*/
/* For source only. Modified in gulp for dist */
/*-------------------
       Em Sizes
--------------------*/
/*
  This rounds @size values to the closest pixel then expresses that value in (r)em.
  This ensures all size values round to exact pixels
*/
/* em */
/* rem */
/*-------------------
       Icons
--------------------*/
/* Maximum Glyph Width of Icon */
/*-------------------
     Neutral Text
--------------------*/
/*-------------------
     Brand Colors
--------------------*/
/*-------------------
      Borders
--------------------*/
/*-------------------
    Derived Values
--------------------*/
/* Loaders Position Offset */
/* Rendered Scrollbar Width */
/* Maximum Single Character Glyph Width, aka Capital "W" */
/* Used to match floats with text */
/* Header Spacing */
/* Minimum Mobile Width */
/* Positive / Negative Dupes */
/* Responsive */
/*-------------------
  Exact Pixel Values
--------------------*/
/*
  These are used to specify exact pixel values in em
  for things like borders that remain constantly
  sized as emSize adjusts

  Since there are many more sizes than names for sizes,
  these are named by their original pixel values.

*/
/* Columns */
/*******************************
             States
*******************************/
/*-------------------
      Disabled
--------------------*/
/*-------------------
        Hover
--------------------*/
/*---  Shadows  ---*/
/*---  Colors  ---*/
/*---  Emotive  ---*/
/*---  Brand   ---*/
/*---  Dark Tones  ---*/
/*---  Light Tones  ---*/
/*-------------------
        Focus
--------------------*/
/*---  Colors  ---*/
/*---  Emotive  ---*/
/*---  Brand   ---*/
/*---  Dark Tones  ---*/
/*---  Light Tones  ---*/
/*-------------------
    Down (:active)
--------------------*/
/*---  Colors  ---*/
/*---  Emotive  ---*/
/*---  Brand   ---*/
/*---  Dark Tones  ---*/
/*---  Light Tones  ---*/
/*-------------------
        Active
--------------------*/
/*---  Colors  ---*/
/*---  Emotive  ---*/
/*---  Brand   ---*/
/*---  Dark Tones  ---*/
/*---  Light Tones  ---*/
/*-------------------
   Z Index
--------------------*/
/* Above everything */
/* Dimmer */
/* From semantic */
/* Menu bar */
/* From semantic */
/* Editor */
/* Blockly */
/* Just below grid picker tooltip */
/* Above the dimmer, since the function editor is inside a dialog */
/* From Blockly css.js */
/* blocklyFlyout: 20 */
/* blocklyMainWorkspaceScrollbar: 20 */
/* blocklyFlyoutScrollbar: 30 */
/* blocklyBlockDragSurface: 50 */
/* blocklyToolboxDiv: 40 -- so blocks go over toolbox when dragging */
/* Above toolbox */
/* Above toolbox */
/* Grid picker */
/* Needs to be above the @blocklyWidgetDivZIndex */
/* Just below dimmer */
/* Note Picker */
/* Monaco */
/* Same as blockly Flyout */
/* Above menu bar */
/* parameter hints */
/* above hints */
/* Editor toolbar */
/* Above the blockly toolbox but under the drag surface */
/* Needs to be on top of @editorToolsZIndex for mobile/tablet view */
/* Should be below the flyouts blocklyFlyout and @monacoFlyoutZIndex */
/* Tutorial */
/* Extension frames */
/* Home screen */
/* Just below the dimmer */
/* Side doc */
/* Above the editor and its components */
/* Full screen */
/* Just below the menu bar */
/* Sandbox mode */
/* Debugger */
/*******************************
     User Global Variables
*******************************/
/*-------------------
     Fonts
--------------------*/
/*-------------------
   Links
--------------------*/
/*-------------------
   Breakpoints
--------------------*/
/*--------------
   Form Input
---------------*/
/*-------------------
     Neutral Text
--------------------*/
/*******************************
             States
*******************************/
/*-------------------
      Disabled
--------------------*/
/*-------------------
    Scroll Bars
--------------------*/
/*******************************
     PXT Variables
*******************************/
/*-------------------
   Menu
--------------------*/
/*-------------------
   Layout
--------------------*/
/*-------------------
   Background
--------------------*/
/*-------------------
   Full screen
--------------------*/
/*-------------------
   Extensions
--------------------*/
/*-------------------
   Side Docs
--------------------*/
/*-------------------
   Editor
--------------------*/
/*-------------------
   Serial editor
--------------------*/
/*-------------------
   Github Diff editor
--------------------*/
/*-------------------
   Blockly
--------------------*/
/*-------------------
   Flyout
--------------------*/
/*-------------------
   Home
--------------------*/
/* Detail view */
/*-------------------
   Tutorial
--------------------*/
/*-------------------
    Banner
-------------------*/
/*-------------------
    Greenscreen
-------------------*/
/*-------------------
    Debugger
-------------------*/
/*-------------------
   ErrorList
-------------------*/
/*******************************
     User Global Variables
*******************************/
/* Adafruit colors */
/*#87fd21;*/
/*******************************
         PXT Overrides
*******************************/
/*-------------------
   Menu
--------------------*/
/*-------------------
   Layout
--------------------*/
/*-------------------
   Background
--------------------*/
/*-------------------
   Full screen
--------------------*/
/*-------------------
   Side Docs
--------------------*/
/*-------------------
   Editor
--------------------*/
/*-------------------
   Blockly
--------------------*/
/*-------------------
   Home screen
--------------------*/
/*-------------------
   Greenscreen
--------------------*/
/*-------------------
   Flyout
--------------------*/
/* Import all components */
/* Import all components */
/* Reference import */
/* Sprite editor */
.pixel-cell {
  shape-rendering: crispedges;
}
.palette-selected {
  stroke: orange;
  stroke-width: 2px;
}
.palette-unselected {
  stroke: none;
}
.sprite-editor-canvas {
  cursor: crosshair;
  z-index: 1001;
  touch-action: none;
}
.sprite-editor-canvas.sprite-editor-eyedropper {
  cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16'%3E%3Cstyle type='text/css'%3E.icon-canvas-transparent%7Bopacity:0;fill:%23F6F6F6;%7D .icon-vs-out%7Bfill:%23F6F6F6;%7D .icon-vs-bg%7Bfill:%23424242;%7D%3C/style%3E%3Cpath class='icon-canvas-transparent' d='M16 15.978h-16v-16h16v16z' id='canvas'/%3E%3Cpath class='icon-vs-out' d='M15.241 4.652l-1.481 1.481.835.835-3.085 3.085-.762-.762-5.168 5.17-3.596 1.539-1.959-1.959 1.349-3.742 5.19-5.191-.645-.646 3.085-3.085.835.835 1.481-1.481c.431-.431 1-.678 1.616-.731h.461c.661.054 1.298.331 1.77.802 1.082 1.084 1.114 2.81.074 3.85z' id='outline'/%3E%3Cpath class='icon-vs-bg' d='M9.467 7.932l.612.613-5.071 5.072-2.795 1.198-1.032-1.032 1.057-2.936 5.072-5.072.585.585v.003l-4.356 4.356 1.569 1.569 4.355-4.356h.004zm4.995-6.422c-.667-.664-1.777-.729-2.435-.072l-2.188 2.189-.836-.835-.174.174-1.497 1.497 4.177 4.177 1.671-1.671-.835-.835 2.189-2.189c.658-.658.592-1.768-.072-2.435z' id='iconBg'/%3E%3C/svg%3E") 2 16, copy;
}
.sprite-canvas-controls {
  z-index: 1000;
}
#sprite-editor-palette .palette-swatch {
  cursor: pointer;
}
.sprite-editor-dropdown.blocklyDropDownDiv {
  background: linear-gradient(#4B7BEC 50px, #2c3e50 50px, #2c3e50 100%);
}
.sprite-editor-dropdown.blocklyDropDownDiv .blocklyDropDownArrow.arrowTop {
  background: #4B7BEC;
}
.sprite-editor-dropdown.blocklyDropDownDiv .blocklyDropDownArrow.arrowBottom {
  background: #2c3e50;
}
#sprite-editor-header {
  z-index: 1002;
  height: 50px;
  width: inherit;
  position: absolute;
  top: 0px;
  left: 0px;
}
#sprite-editor-header-controls {
  width: 100%;
  height: 100%;
}
#sprite-editor-gallery-outer {
  overflow: hidden;
  position: absolute;
  z-index: 1002;
  width: 100%;
}
#sprite-editor-gallery {
  overflow-y: scroll;
  width: 100%;
  height: 100%;
  background: #2c3e50;
}
.sprite-editor-card {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10px' height='10px'%3E%3Crect x='0' y='0' width='10px' height='10px' fill='white'%3E%3C/rect%3E%3Crect x='0' y='0' width='5px' height='5px' fill='%23dedede'%3E%3C/rect%3E%3Crect x='5' y='5' width='5px' height='5px' fill='%23dedede'%3E%3C/rect%3E%3C/svg%3E");
}
.sprite-editor-icon {
  fill: white;
  font-family: "Icons";
  font-size: 19px;
}
.sprite-editor-xicon {
  fill: white;
  font-family: "xicon";
  font-size: 19px;
}
.sprite-editor-button {
  cursor: pointer;
}
.sprite-editor-button-bg {
  fill: #525a5b;
}
.sprite-editor-button-fg {
  fill: #7f8c8d;
}
.sprite-editor-confirm-button .sprite-editor-button-bg {
  fill: #294da0;
}
.sprite-editor-confirm-button .sprite-editor-button-fg {
  fill: #4B7BEC;
}
.sprite-editor-button.disabled {
  cursor: not-allowed;
}
.sprite-editor-button.disabled .sprite-editor-button-bg {
  fill-opacity: 0.8;
}
.sprite-editor-button.disabled .sprite-editor-button-fg {
  fill-opacity: 0.8;
}
.sprite-editor-button:active:not(.disabled) .sprite-editor-button-bg {
  fill-opacity: 1 !important;
  transition: fill-opacity 0.1s;
}
.sprite-editor-button:active:not(.disabled) .sprite-editor-button-fg {
  fill-opacity: 1 !important;
  transition: fill-opacity 0.1s;
}
.sprite-editor-button:hover:not(.disabled) .sprite-editor-button-fg {
  fill-opacity: 0.8;
  transition: fill-opacity 0.1s;
}
.sprite-editor-button:hover:not(.disabled) .sprite-editor-button-bg {
  fill-opacity: 0.8;
  transition: fill-opacity 0.1s;
}
.sprite-editor-button.selected {
  /* Fixes a bug in Microsoft Edge where changing the fill alone would not
     * trigger a re-render of the button for some reason. The position is already
     * relative, but having this in the rule forces the render. */
  position: relative;
}
.sprite-editor-button.selected .sprite-editor-button-fg {
  fill: #495353;
}
.sprite-editor-text {
  font-family: 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important;
  user-select: none;
  cursor: auto;
}
.sprite-editor-label {
  fill: white;
}
.sprite-editor-dropdown-bg {
  background: linear-gradient(#4B7BEC 50px, #2c3e50 50px, #2c3e50 100%);
  border-radius: 4px;
  padding-top: 4px;
  position: relative;
}
.sprite-editor-glyph {
  cursor: pointer;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cstyle%3E.icon-canvas-transparent%7Bopacity:0;fill:%23f6f6f6%7D.icon-vs-out%7Bfill:%23f6f6f6%7D.icon-vs-bg%7Bfill:%23424242%7D.icon-vs-red%7Bfill:%23e51400%7D.icon-vs-yellow%7Bfill:%23ffcc00%7D.icon-vs-green%7Bfill:%23339933%7D.icon-vs-blue%7Bfill:%231ba1e2%7D.icon-vs-action-purple%7Bfill:%23652d90%7D.icon-white%7Bfill:%23ffffff%7D%3C/style%3E%3Cpath class='icon-canvas-transparent' d='M16 16H0V0h16v16z' id='canvas'/%3E%3Cpath class='icon-vs-out' d='M16 8c0 4.411-3.589 8-8 8a2.803 2.803 0 0 1-2.8-2.8c0-.833.272-1.629.766-2.241a.596.596 0 0 0 .101-.359.667.667 0 0 0-.667-.666.58.58 0 0 0-.358.102A3.584 3.584 0 0 1 2.8 10.8 2.803 2.803 0 0 1 0 8c0-4.411 3.589-8 8-8s8 3.589 8 8z' id='outline'/%3E%3Cpath class='icon-white' d='M5.4 7.933a2.67 2.67 0 0 1 2.667 2.666c0 .606-.193 1.179-.544 1.614a1.599 1.599 0 0 0-.323.987.8.8 0 0 0 .8.8c3.309 0 6-2.691 6-6s-2.691-6-6-6-6 2.691-6 6c0 .441.359.8.8.8.378 0 .729-.114.986-.322A2.568 2.568 0 0 1 5.4 7.933z' id='iconFg'/%3E%3Cg id='iconBg'%3E%3Cpath class='icon-vs-bg' d='M8 15c-.992 0-1.8-.808-1.8-1.8 0-.606.193-1.179.544-1.613.208-.259.323-.609.323-.987 0-.919-.748-1.666-1.667-1.666-.377 0-.728.115-.986.323A2.58 2.58 0 0 1 2.8 9.8C1.808 9.8 1 8.992 1 8c0-3.86 3.14-7 7-7 3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7zM5.4 7.933a2.67 2.67 0 0 1 2.667 2.666c0 .606-.193 1.179-.544 1.614a1.599 1.599 0 0 0-.323.987.8.8 0 0 0 .8.8c3.309 0 6-2.691 6-6s-2.691-6-6-6-6 2.691-6 6c0 .441.359.8.8.8.378 0 .729-.114.986-.322A2.568 2.568 0 0 1 5.4 7.933z'/%3E%3Cpath class='icon-vs-action-purple' d='M4.5 5.375a.875.875 0 1 0 0 1.75.875.875 0 0 0 0-1.75z'/%3E%3Cpath class='icon-vs-blue' d='M7.125 3.625a.875.875 0 1 0 0 1.75.875.875 0 0 0 0-1.75z'/%3E%3Cpath class='icon-vs-green' d='M10.625 4.5a.875.875 0 1 0 0 1.75.875.875 0 0 0 0-1.75z'/%3E%3Cpath class='icon-vs-yellow' d='M11.5 8a.875.875 0 1 0 0 1.75.875.875 0 0 0 0-1.75z'/%3E%3Cpath class='icon-vs-red' d='M9.75 10.625a.875.875 0 1 0 0 1.75.875.875 0 0 0 0-1.75z'/%3E%3C/g%3E%3C/svg%3E");
  background-position: center;
  background-size: 65%;
  background-repeat: no-repeat;
}
.sprite-focus-hover {
  transition: all 0.15s ease-out;
  border-radius: 50%;
}
.sprite-focus-hover:hover {
  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.35);
  -webkit-transform: scale(1.1);
  transform: scale(1.1);
}
.sprite-editor-glyph.sprite-focus-hover:hover {
  box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.35);
}
.sprite-gallery-button {
  display: inline-block;
  float: left;
  padding: 0;
  margin: 4px;
  border-radius: 4px;
  outline: none;
  border: 1px solid;
  transition: box-shadow 0.1s;
  cursor: pointer;
}
.sprite-gallery-button-hover {
  box-shadow: 0px 0px 0px 4px rgba(255, 255, 255, 0.2);
}
.sprite-gallery-button:active {
  box-shadow: 0px 0px 0px 6px rgba(255, 255, 255, 0.2);
}
.sprite-gallery-button > img {
  width: 80%;
  height: 80%;
  margin-top: 5%;
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: optimize-contrast;
  image-rendering: pixelated;
  -ms-interpolation-mode: nearest-neighbor;
}
/** Sprite Editor React component styling*/
.sprite-editor-snippet-container {
  height: 503px;
  width: 492px;
  overflow: hidden;
}
.snippet-sprite-editor {
  height: 503px;
  width: 492px;
  max-height: 503px;
  min-height: 503px;
  max-width: 492px;
  min-width: 492px;
  overflow: hidden;
}
/* Import all components */
/* Reference import */
/* Melody Editor */
#melody-toggle {
  margin: 10px;
  text-align: center;
  float: center;
}
#melody-editor-header-controls {
  height: 40px;
}
.melody-grid-div {
  margin: 10px 20px 0px;
  text-align: center;
  background-color: inherit;
}
.cell {
  height: 35px;
  width: 35px;
  margin: 1px;
}
.melody-top-bar-div {
  padding: 6px 0px 0px 0px;
  float: center;
  text-align: center;
}
.melody-editor-div {
  height: 100%;
  background-color: #4f0643;
}
.melody-content-div {
  max-height: 550px;
  width: 300px;
  padding: 0px;
  overflow: hidden;
}
.melody-editor-dropdown {
  padding: 0px !important;
}
#melody-editor-gallery-outer {
  overflow: hidden;
  position: absolute;
  z-index: 1002;
  width: 100%;
}
#melody-editor-gallery {
  overflow-y: scroll;
  overflow-x: hidden;
  padding: 0.75rem;
  background: #4f0643;
  max-height: 350px;
}
.melody-gallery-button {
  text-align: center;
  display: flex;
  border-radius: 4px;
  transition: box-shadow 0.1s;
  cursor: pointer;
  background-color: #dcdcdc;
  width: 100%;
  margin-bottom: 0.75rem;
  height: 2.75rem;
  line-height: 2.5rem;
}
.melody-gallery-button .melody-color-block {
  margin-top: 0.5rem;
}
.melody-editor-button.left-button {
  flex-grow: 1;
  border-radius: 4px 0 0 4px;
  border-left: 1px #ffffff solid;
  border-bottom: 1px #ffffff solid;
  border-top: 1px #ffffff solid;
  padding-left: 0.5rem;
  padding-right: 0.3rem;
}
.melody-editor-button.right-button {
  min-width: 2.75rem;
  padding-left: 0.3rem;
  border-radius: 0 4px 4px 0;
  border-left: 1px solid #4f0643;
  border-right: 1px #ffffff solid;
  border-bottom: 1px #ffffff solid;
  border-top: 1px #ffffff solid;
}
.melody-editor-button {
  background-color: #dcdcdc;
  color: #000000;
  transition: color 0.1s, background-color 0.1s;
}
.melody-editor-button:hover {
  background-color: #cacbcd;
  color: #000000;
}
.melody-editor-button.right-button .icon {
  opacity: 0.9;
}
.melody-gallery-play-icon {
  float: left;
}
.melody-confirm-button {
  float: right;
  margin: 0px !important;
  height: 28px;
  width: 70px;
  color: white;
  background-color: #e30fc0;
  border: none;
  border-radius: 2px;
  -webkit-transition-duration: 0.1s;
  /* Safari */
  transition-duration: 0.1s;
  font-family: 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important;
}
.melody-confirm-button:hover {
  background-color: #9e0986;
  border: 1px solid #e30fc0;
}
.melody-confirm-button:focus {
  outline: none !important;
}
.melody-editor-text {
  margin: 0px 3px;
  float: left;
  font-family: 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important;
  font-weight: bold;
  font-size: 17px;
}
.melody-editor-field-icon {
  fill: white;
  font-family: "Icons";
  font-size: 19px;
}
.melody-icon {
  float: left;
  height: 25px;
}
.melody-gallery-button-hover {
  box-shadow: 0px 0px 0px 4px rgba(255, 255, 255, 0.2);
}
.melody-gallery-button:active {
  box-shadow: 0px 0px 0px 6px rgba(255, 255, 255, 0.2);
}
#melody-tempo-input {
  float: left;
  width: 50px;
  height: 28px;
  border-radius: 2px;
  border: none;
  padding-left: 5px;
  color: #1B1C1D;
}
#melody-tempo-input:focus {
  outline: none !important;
}
#melody-play-button {
  height: 28px;
  width: 120px;
  display: inline-block;
  color: white;
  background-color: #7f8c8d;
  border: none;
  border-radius: 2px;
  -webkit-transition-duration: 0.1s;
  /* Safari */
  transition-duration: 0.1s;
}
#melody-play-button:hover {
  background-color: #525a5b;
  border: 1px solid #7f8c8d;
}
#melody-play-button:focus {
  outline: none !important;
}
.melody-bottom-bar-div {
  margin: 7px 3px 0px;
  padding: 0px 20px 20px;
  background-color: inherit;
  text-align: center;
}
.melody-color-block {
  margin: 4px 7px 0px 0px;
  float: right;
}
.sliver {
  display: inline-block;
  width: 9px;
  height: 23px;
  margin: 0.5px;
  border: 1px solid rgba(0, 0, 0, 0.2);
}
.left-edge {
  border-radius: 5px 0px 0px 5px;
}
.right-edge {
  border-radius: 0px 5px 5px 0px;
}
.melody-preview-button {
  float: right;
  height: 35px;
  width: 35px;
  padding: 12px 11px !important;
}
.melody-gallery-row {
  float: left;
}
.melody-content-div .melody-red,
.pxt-renderer g.blocklyEditableText >  .melody-red {
  fill: #A80000;
  background: #A80000;
}
.melody-content-div .melody-orange,
.pxt-renderer g.blocklyEditableText >  .melody-orange {
  fill: #D83B01;
  background: #D83B01;
}
.melody-content-div .melody-yellow,
.pxt-renderer g.blocklyEditableText >  .melody-yellow {
  fill: #FFB900;
  background: #FFB900;
}
.melody-content-div .melody-green,
.pxt-renderer g.blocklyEditableText >  .melody-green {
  fill: #107C10;
  background: #107C10;
}
.melody-content-div .melody-teal,
.pxt-renderer g.blocklyEditableText >  .melody-teal {
  fill: #008272;
  background: #008272;
}
.melody-content-div .melody-blue,
.pxt-renderer g.blocklyEditableText >  .melody-blue {
  fill: #0078D7;
  background: #0078D7;
}
.melody-content-div .melody-violet,
.pxt-renderer g.blocklyEditableText >  .melody-violet {
  fill: #B4009E;
  background: #B4009E;
}
.melody-content-div .melody-purple,
.pxt-renderer g.blocklyEditableText >  .melody-purple {
  fill: #5C2D91;
  background: #5C2D91;
}
.melody-content-div .melody-default,
.pxt-renderer g.blocklyEditableText >  .melody-default {
  fill: #DCDCDC;
  background: #DCDCDC;
}
.playing {
  fill-opacity: 0.7;
}
/*******************************
        Blockly SVG
*******************************/
svg.blocklySvg {
  background-color: #4c4b4d !important;
}
#maineditor,
#blocksEditor > div.loading {
  background: #4c4b4d;
}
#blocksEditor {
  position: absolute;
  width: 100%;
  height: 100%;
}
#blocksEditor .injectionDiv svg {
  overflow: visible;
}
#blocksEditor > div.loading {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  opacity: 0.7;
}
.blocklyMainBackground {
  stroke: none !important;
}
.rtl text.blocklyText {
  text-align: right;
}
body.blocklyMinimalBody {
  min-width: initial;
  overflow: initial;
}
@supports (-ms-accelerator:true) {
  .rtl .blocklyPreview {
    right: 50%;
    left: auto;
  }
}
/*******************************
        Blockly Text
*******************************/
.pxt-renderer text.blocklyFlyoutLabelText,
.pxt-renderer .blocklyFlyoutButton text.blocklyText {
  font-family: 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important;
}
.pxt-renderer text.blocklyText.blocklyBoldText {
  font-weight: bold;
}
.pxt-renderer text.blocklyText.blocklyItalicizedText {
  font-style: italic;
}
.pxt-renderer text.blocklyText.blocklyBoldItalicizedText {
  font-weight: bold;
  font-style: italic;
}
.pxt-renderer text.semanticIcon {
  fill: #fff;
  font-family: "Icons";
  font-size: 19px;
}
.pxt-renderer text.semanticIcon.inverted {
  fill: #000;
}
/* Used by custom field in grey expression blocks */
.blocklyGreyExpressionBlockText {
  color: white;
}
/*******************************
        Blockly Flyout
*******************************/
.blocklyFlyoutButton {
  fill: transparent !important;
}
.blocklyFlyoutButton:hover {
  fill: #33cc66 !important;
}
.blocklyFlyoutButtonBackground {
  stroke: #33cc66 !important;
  stroke-width: 3px !important;
}
.blocklyFlyoutButton .blocklyText {
  fill: white !important;
}
.blocklyFlyoutButtonShadow {
  fill: none !important;
}
.blocklyFlyoutLabelText {
  fill: black !important;
  font-size: 1rem;
}
.blocklyFlyoutHeading .blocklyFlyoutLabelText {
  fill: black !important;
  font-size: 1.5rem;
}
.blocklyFlyoutLabelText:hover {
  fill: black !important;
}
.blocklyFlyoutLabelIcon {
  font-family: 'Icons';
  font-size: 1.5rem;
}
line.blocklyFlyoutLine {
  stroke: black;
}
/* Opacity of blockly flyout background */
path.blocklyFlyoutBackground {
  fill: #292F36 !important;
  fill-opacity: 0.9 !important;
}
/*******************************
        Field divs
*******************************/
div.blocklyWidgetDiv {
  position: fixed;
  /* Lower Z index for BlocklyWidgetDiv and grid picker tooltips */
  z-index: 993;
}
div.blocklyWidgetDiv.functioneditor {
  /* The Blockly widget should appear above the function editor  */
  z-index: 1001;
}
div.blocklyDropDownDiv {
  z-index: 994;
}
div.blocklyTooltipDiv {
  border: none !important;
  box-shadow: none !important;
  background-color: transparent !important;
  opacity: 1 !important;
  /* wrap the JS text inside a blockly Tooltip */
  overflow-wrap: break-word;
}
div.blocklyTooltipDiv .ui.card .content .description {
  /* override semantic, tooltip text should always be visible*/
  display: inline;
}
/* Blockly Slider field */
.blocklyWidgetDiv .goog-slider-horizontal {
  background: white;
  border: 2px solid black;
  border-radius: 5px;
}
/* (microbit only) This is to ensure the leds inside showLeds fill the entire checkbox */
text.blocklyCheckbox {
  fill: #ff3030 !important;
  text-shadow: 0px 0px 6px #f00;
  font-size: 17pt !important;
}
/* (arcade only) Sets the correct background color for the sprite image field */
.pxt-renderer .blocklyEditableText > rect.blocklySpriteField,
.pxt-renderer .blocklyEditableText > rect.blocklyAnimationField,
.pxt-renderer .blocklyEditableText > rect.blocklyTilemapField {
  fill: #dedede;
  stroke: #898989;
  stroke-width: 1;
}
/*******************************
        Blocks
*******************************/
/* Transulcent blocks when dragging */
.blocklyDragging > .blocklyPath {
  fill-opacity: 0.7;
}
/* Fade out disabled blocks, but don't completely lose the colour */
.blocklyDisabled > .blocklyPathDark {
  display: block !important;
  fill-opacity: 0.5;
}
.blocklyDisabled .blocklyNonEditableText .blocklyBlockBackground {
  fill-opacity: 0.1 !important;
}
/*******************************
        Scrollbars
*******************************/
.blocklyScrollbarBackground {
  fill: none;
}
.blocklyScrollbarHandle {
  fill: #000;
  opacity: 0.8;
}
.blocklyScrollbarBackground:hover + .blocklyScrollbarHandle,
.blocklyScrollbarHandle:hover,
.blocklyScrollbarBackground:active + .blocklyScrollbarHandle,
.blocklyScrollbarHandle:active {
  stroke-width: 3;
  stroke: #000;
}
/*******************************
        Context menu
*******************************/
.blocklyWidgetDiv .blocklyContextMenu {
  border: 1px solid rgba(34, 36, 38, 0.15);
  box-shadow: 0 1px 2px 0 rgba(34, 36, 38, 0.15) !important;
  padding: 0 !important;
}
.blocklyWidgetDiv .blocklyContextMenu .goog-menuitem {
  margin: 0 !important;
  padding: .92857143em 1.14285714em !important;
  font: normal 13px 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important;
}
.blocklyWidgetDiv .blocklyContextMenu .goog-menuitem-highlight,
.blocklyWidgetDiv .blocklyContextMenu .goog-menuitem-hover {
  border: none !important;
  padding: .92857143em 1.14285714em !important;
  background: rgba(0, 0, 0, 0.05) !important;
}
/*******************************
        Comments
*******************************/
.blocklyCommentForeignObject {
  overflow: hidden;
}
.blocklyMinimalBody {
  position: static;
  border: 1px solid #FAF6BD;
}
/*******************************
        Media Adjustments
*******************************/
/* Mobile */
@media only screen and (max-width: 767px) {
  text.blocklyCheckbox {
    font-size: 17pt !important;
  }
}
/* Import all components */
/* Reference import */
.blocklyDropDownContent .blocklyPianoDiv {
  position: relative;
  touch-action: none;
}
.blocklyDropDownContent .blocklyNote {
  border: solid 0.5px;
  cursor: pointer;
  display: inline-block;
  position: absolute;
  top: 0px;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
  background-color: white;
  z-index: 1000;
}
.blocklyDropDownContent .blocklyNote.black {
  background-color: black;
  z-index: 1001;
}
.blocklyDropDownContent .blocklyNote:hover {
  background-color: yellow !important;
}
.blocklyDropDownContent .blocklyNote.selected {
  background-color: yellowgreen !important;
}
.blocklyDropDownContent .blocklyNoteLabel {
  border: solid 0.5px;
  color: white;
  display: inline-block;
  line-height: normal;
  position: absolute;
  text-align: center;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;
  font-size: 12pt;
}
.blocklyDropDownContent .blocklyNotePrevNext {
  border: solid 0.5px;
  border-top: 0;
  cursor: pointer;
  color: white;
  display: inline-block;
  font-weight: bold;
  line-height: normal;
  position: absolute;
  text-align: center;
}
.blocklyDropDownContent .blocklyDropdownTextLabel {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  width: 70px;
  display: inline-block;
  color: white;
  font-size: 12px;
}
.blocklyGridPickerTooltip {
  z-index: 994;
}
.blocklyGridPickerPadder {
  outline: none;
  box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.3);
}
.blocklyWidgetDiv .blocklyGridPickerRow {
  display: table-row;
}
.blocklyWidgetDiv .blocklyGridPickerMenu {
  display: table;
  outline: none;
  border-spacing: 7px;
}
.blocklyGridPickerScroller {
  outline: none;
  padding: 4px;
  border-radius: 4px;
  position: relative;
  -webkit-overflow-scrolling: touch;
}
.blocklyGridPickerPadder {
  border-radius: 4px;
  outline: none;
  position: relative;
}
.blocklyGridPickerPadder .ui.input i.search.icon {
  margin-top: -0.2rem;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-menuitem {
  background: white;
  cursor: pointer;
  min-width: unset;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-menuitem-highlight,
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-menuitem-hover {
  background: #d6e9f8;
  box-shadow: 0px 0px 0px 4px rgba(255, 255, 255, 0.2);
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-option {
  border: solid 1px black;
  border-radius: 4px;
  color: #fff;
  font-size: 12pt;
  font-weight: bold;
  display: table-cell;
  padding: 8px;
  text-align: center;
  vertical-align: top;
  -webkit-user-select: none;
  -moz-user-select: -moz-none;
  -ms-user-select: none;
  user-select: none;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-menuitem-content {
  color: #fff;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .floatLeft {
  float: left;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-option.goog-option-selected {
  position: relative;
}
.blocklyWidgetDiv .blocklyGridPickerMenu .goog-menuitem .goog-menuitem-checkbox {
  display: none;
}
.blocklyGridPickerTooltip {
  z-index: 995;
}
.blocklyGridPickerSelectedBar {
  display: flex;
  padding-top: 5px;
  justify-content: space-between;
}
.blocklyGridPickerSelectedImage {
  padding: 3px;
  display: inline-block;
  vertical-align: middle;
}
.ui.input input.blocklyGridPickerSearchBar {
  background: none;
  border: none;
  color: white;
}
.ui.input input.blocklyGridPickerSearchBar::placeholder {
  color: white;
}
.ui.input input.blocklyGridPickerSearchBar::-webkit-input-placeholder {
  color: white;
}
.ui.input input.blocklyGridPickerSearchBar::-moz-placeholder {
  color: white;
}
.ui.input input.blocklyGridPickerSearchBar:-ms-input-placeholder {
  color: white;
}
.ui.input input.blocklyGridPickerSearchBar:-moz-placeholder {
  color: white;
}
.blocklyToggle {
  transition: transform 1s;
}
.blocklyToggle .blocklyToggleCircle,
.blocklyToggle .blocklyToggleRect {
  stroke-width: 1px;
  stroke: grey;
  stroke-opacity: 0.4;
}
.blocklyToggle.blocklyToggleOn .blocklyToggleCircle,
.blocklyToggle.blocklyToggleOn .blocklyToggleRect {
  fill: #4DDc64;
}
.blocklyToggle.blocklyToggleOff .blocklyToggleCircle,
.blocklyToggle.blocklyToggleOff .blocklyToggleRect {
  fill: #95a5a6;
}
.blocklyToggle.blocklyToggleOnBreakpoint polygon {
  fill: #E80D00;
  stroke: #fff;
  stroke-width: 12px !important;
  stroke-linecap: round;
  stroke-opacity: 1;
  cursor: pointer;
}
.blocklyToggle.blocklyToggleOffBreakpoint polygon {
  fill: #333;
  stroke: 0px;
  cursor: pointer;
}
.blocklyToggle ~ .blocklyText.blocklyToggleText {
  font-size: 10pt;
  cursor: pointer;
}
.blocklyToggle.blocklyToggleOff ~ .blocklyText.blocklyToggleText {
  fill: white;
}
.blocklyDropDownDiv .rgbColorPicker > tr > td {
  height: 40px;
  width: 40px;
}
.blocklyDropDownDiv .blocklyFieldSliderReadout .blocklyColorReadout {
  height: 20px;
  width: 25px;
  border-radius: 10px;
  display: inline-block;
  vertical-align: middle;
}
#custom-content .blocklyLightboxDiv {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.55);
  z-index: 993;
}
.blocklyCanvasOverlayOuter {
  padding: 0.5rem;
  margin: 0.1rem;
  background: #249ca3;
  border: solid 2px #249ca3;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
  border-bottom-left-radius: 0;
}
.blocklyCanvasOverlayDiv {
  cursor: none;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 10000;
  position: relative;
  overflow: hidden;
  border: solid 5px #333333;
  clip-path: polygon(0% 4px, 4px 0%, calc(98%) 0%, 100% 4px, 100% calc(98%), calc(98%) 100%, 4px 100%, 0 calc(98%));
}
.blocklyCanvasOverlayDiv .cross-x,
.blocklyCanvasOverlayDiv .cross-y {
  background-color: #575E75;
  position: absolute;
}
.blocklyCanvasOverlayDiv .cross-x {
  width: 100%;
  height: 2px;
  z-index: 10;
}
.blocklyCanvasOverlayDiv .cross-y {
  width: 2px;
  height: 100%;
  z-index: 10;
}
.blocklyCanvasOverlayDiv .label {
  position: absolute;
  color: #575E75;
  font-size: 100%;
  white-space: nowrap;
}
.positionEyedropper {
  background: none;
  outline: none;
  border: none;
  width: 100%;
  text-align: center;
  border-top: 1px solid #ddd;
  padding-top: 5px;
  cursor: pointer;
}
.positionEyedropper:hover {
  background: #eee;
}
/* Reference import */
